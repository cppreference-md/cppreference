---
import { codeToHtml } from "shiki";

export interface Props {
  title?: string;
  code: string;
  lang?: string;
}

const { title, code, lang = "javascript" } = Astro.props;

const [lightHighlighted, darkHighlighted] = await Promise.all([
  codeToHtml(code, {
    lang,
    theme: "github-light",
  }),
  codeToHtml(code, {
    lang,
    theme: "github-dark",
  }),
]);

let isExpanded = false;
---

<div class="preview-container not-content">
  {title && <div class="preview-title">{title}</div>}
  
  <div class="preview-wrapper">
    <div class="code-panel">
      <div class="light-code" set:html={lightHighlighted} />
      <div class="dark-code" set:html={darkHighlighted} />
    </div>
    <div class="preview-panel">
      <slot />
    </div>
  </div>
</div>

<style>
  .preview-container {
    border: 1px solid #e1e5e9;
    border-radius: 6px;
    margin: 1.5rem 0;
    overflow: hidden;
    background: white;
  }

  .preview-title {
    background: #f6f8fa;
    padding: 0.75rem 1rem;
    border-bottom: 1px solid #e1e5e9;
    font-size: 0.9rem;
    color: #656d76;
    font-weight: 500;
  }

  .preview-wrapper {
    display: flex;
    flex-direction: row;
  }

  .code-panel {
    flex: 1;
    min-width: 0;
    border-right: 1px solid #e1e5e9;
    position: relative;
    overflow: hidden;
  }

  .preview-panel {
    flex: 1;
    min-width: 0;
    padding: 1rem;
    display: flex;
    justify-content: center;
    align-items: center;
    background: white;
  }

  .light-code {
    display: block;
    max-height: 400px;
    overflow: auto;
    padding: 1rem;
  }

  .dark-code {
    display: none;
    max-height: 400px;
    overflow: auto;
    padding: 1rem;
  }

  :root[data-theme="dark"] .light-code {
    display: none;
  }

  :root[data-theme="dark"] .dark-code {
    display: block;
  }

  :root[data-theme="dark"] .preview-container {
    border-color: #30363d;
    background: #0d1117;
  }

  :root[data-theme="dark"] .preview-title {
    background: #161b22;
    border-color: #30363d;
    color: #8b949e;
  }

  :root[data-theme="dark"] .code-panel {
    border-color: #21262d;
  }

  :root[data-theme="dark"] .preview-panel {
    background: #0d1117;
  }

  :root[data-theme="dark"] .toggle-code {
    background: rgba(13, 17, 23, 0.9);
    border-color: #30363d;
    color: #c9d1d9;
  }

  :root[data-theme="dark"] .toggle-code:hover {
    background: #161b22;
  }

  @media (max-width: 768px) {
    .preview-wrapper {
      flex-direction: column;
    }

    .code-panel {
      border-right: none;
      border-bottom: 1px solid #e1e5e9;
    }

    :root[data-theme="dark"] .code-panel {
      border-bottom-color: #21262d;
    }
  }

  /* Code block styling */
  :global(.code-panel pre),
  :global(.code-panel pre[class*="shiki"]) {
    margin: 0 !important;
    background: transparent !important;
    background-color: transparent !important;
    border: none !important;
    border-radius: 0 !important;
    box-shadow: none !important;
    font-size: 0.9rem !important;
    line-height: 1.5 !important;
  }

  :global(.code-panel code),
  :global(.code-panel code[class*="shiki"]) {
    background: transparent !important;
    background-color: transparent !important;
    padding: 0 !important;
    border: none !important;
    border-radius: 0 !important;
    box-shadow: none !important;
    display: block !important;
  }
</style>
